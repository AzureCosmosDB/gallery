[
  {
    "title": "Build a Copilot sample app: Azure Cosmos DB for NoSQL (C#)",
    "description": "This sample application shows how to build a Generative-AI application using Azure Cosmos DB for NoSQL using its new vector search capabilities and Azure OpenAI Service and Semantic Kernel. The sample provides practical guidance on many concepts you will need to design and build these types of applications.",
    "preview": "coming soon",
    "website": "https://github.com/markjbrown",
    "author": "Mark Brown",
    "source": "https://github.com/AzureCosmosDB/cosmosdb-nosql-copilot",
    "tags": [
      "csharp",
      "gpt4",
      "embedding-text-3",
      "chat",
      "ragPattern",
      "featured",
      "managedidentity",
      "appservice",
      "openai",
      "microsoft",
      "vectorcosmosnosql"
    ]
  },
  {
    "title": "Build a Copilot sample app - Azure Cosmos DB for MongoDB (C#)",
    "description": "This sample application shows how to build a Generative-AI application using Azure Cosmos DB for MongoDB using its vector search capabilities and Azure OpenAI Service and Semantic Kernel. The sample provides practical guidance on many concepts you will need to design and build these types of applications.",
    "preview": "coming soon",
    "website": "https://github.com/markjbrown",
    "author": "Mark Brown",
    "source": "https://github.com/AzureCosmosDB/cosmosdb-mongo-copilot",
    "tags": [
      "csharp",
      "gpt4",
      "embedding-text-3",
      "chat",
      "ragPattern",
      "featured",
      "appservice",
      "openai",
      "microsoft",
      "vectorcosmosmongo"
    ]
  },
  {
    "title": "Movie ChatBot for Azure Cosmos DB for MongoDB",
    "description": "In this sample, we'll demonstrate how to build a RAG (Retrieval Augmented Generation) pattern application using a subset of the popular Movie Lens 1M dataset. This sample performs RAG over movie data with vector search, stores conversational chat history, and leverages a semantic cache, all using Azure Cosmos DB and its built-in vector search capability. Azure OpenAI Service is used to generate embeddings and LLM completions.",
    "preview": "coming soon",
    "website": "https://github.com/AzureCosmosDB",
    "author":"Azure Cosmos DB Team",
    "source": "https://github.com/AzureCosmosDB/Fabric-Conf-2024-Build-AI-Apps",
    "tags":[
      "python",
      "featured",
      "gpt4",
      "chat",
      "managedidentity",
      "openai",
      "ragPattern",
      "vectorcosmosmongo",
      "microsoft"
    ]
  },
  {
    "title": "Build your own Copilot End to End Solution Accelerator",
    "description": "Production Ready Reference Solution for how to build your own copilot using Azure services including: Azure Cosmos DB for NoSQL, Azure OpenAI Service, Azure Kubernetes Service or Azure Container Apps. Uses Semantic Kernel plugins for OpenAI, Cosmos DB connectors, and semantic cache.",
    "preview": "coming soon",
    "website": "https://github.com/solliancenet/",
    "author": "Solliance",
    "source": "https://github.com/Azure/BuildYourOwnCopilot",
    "tags": [
      "csharp",
      "gpt4",
      "embedding-text-3",
      "chat",
      "agent",
      "ragPattern",
      "managedidentity",
      "aks",
      "aca",
      "monitor",
      "keyvault",
      "openai",
      "vectorcosmosnosql",
      "microsoft"
    ]
  },
  {
    "title": "LangChain integration with Azure Cosmos DB for NoSQL",
    "description": "This sample shows ingesting PDF's into Azure Cosmos DB for NoSQL and doing vector similarity search (RAG Pattern) using Langchain.",
    "preview": "coming soon",
    "website": "https://github.com/aayush3011",
    "author":"Aayush Kataria",
    "source": "https://github.com/microsoft/AzureDataRetrievalAugmentedGenerationSamples/blob/main/Python/CosmosDB-NoSQL-Integrations/LangChain-CosmosDBNoSQL-AzureOpenAI.ipynb",
    "tags":[
      "python",
      "gpt4",
      "openai",
      "jupyternotebook",
      "langchain",
      "vectorcosmosnosql",
      "microsoft"
    ]
  },
  {
    "title": "Serverless AI Chat with RAG using Langchain and Azure Cosmos DB for MongoDB",
    "description": "This sample shows ingesting PDF's into Azure Cosmos DB for NoSQL and doing vector similarity search (RAG Pattern) using Langchain.",
    "preview": "coming soon",
    "website": "https://github.com/sinedied",
    "author":"Yohan Lasorsa",
    "source": "https://github.com/microsoft/AzureDataRetrievalAugmentedGenerationSamples/blob/main/Python/CosmosDB-NoSQL-Integrations/LangChain-CosmosDBNoSQL-AzureOpenAI.ipynb",
    "tags":[
      "typescript",
      "gpt4",
      "openai",
      "functions",
      "chat",
      "langchain",
      "vectorcosmosmongo",
      "microsoft"
    ]
  },
  {
    "title": "Simple Vector Search and RAG in Azure Cosmos DB for NoSQL for Java Developers",
    "description": "Get started in this simple e2e solution using Azure OpenAI embeddings and a GPT-3.5 model for completions, and vector search in Azure Cosmos DB for NoSQL!",
    "preview": "coming soon",
    "website": "https://github.com/TheovanKraay",
    "author":"Theo van Kraay",
    "source": "https://github.com/microsoft/AzureDataRetrievalAugmentedGenerationSamples/tree/main/Java/CosmosDB-NoSQL-VectorSearch",
    "tags":[
      "java",
      "gpt35",
      "openai",
      "langchain",
      "vectorcosmosnosql",
      "microsoft"
    ]
  },
  {
    "title": "Simple Vector Search and RAG in Azure Cosmos DB for NoSQL for Azure Spring Apps",
    "description": "This sample shows how to build a ChatGPT like application in Spring and run on Azure Spring Apps with Azure Cosmos DB. The vector store in Azure Cosmos DB enables the application to use your private data to answer the questions.",
    "preview": "coming soon",
    "website": "https://github.com/TheovanKraay",
    "author":"Theo van Kraay",
    "source": "https://github.com/microsoft/AzureDataRetrievalAugmentedGenerationSamples/tree/main/Java/CosmosDB-NoSQL-RAG-Chatbot",
    "tags":[
      "java",
      "gpt35",
      "openai",
      "langchain",
      "vectorcosmosnosql",
      "azurespringapps",
      "microsoft"
    ]
  },
  {
    "title": "Cosmic RAG Food app with Langchain, Azure OpenAI and Azure Cosmos DB for MongoDB",
    "description": "A Demo application for a streamlined ordering system tailored for various food categories. It allows users to request customized meals, such as "high protein dishes," with recommendations provided from our database. Users can further customize their choices before sending their orders from the app to the restaurant, including delivery details.",
    "preview": "coming soon",
    "website": "https://github.com/john0isaac",
    "author":"John Aziz",
    "source": "https://github.com/Azure-Samples/Cosmic-Food-RAG-app",
    "tags":[
      "python",
      "typescript",
      "gpt35",
      "embedding-ada",
      "openai",
      "appservice",
      "vectorcosmosmongo",
      "community"
    ]
  },
  {
    "title": "LangChain integration with Azure Cosmos DB for MongoDB",
    "description": "This sample shows ingesting PDF's into Azure Cosmos DB and doing vector similarity search (RAG Pattern) using Langchain.",
    "preview": "coming soon",
    "website": "https://github.com/aayush3011",
    "author":"Aayush Kataria",
    "source": "https://github.com/microsoft/AzureDataRetrievalAugmentedGenerationSamples/blob/main/Python/CosmosDB-MongoDB-vCore-Integrations/LangChain-CosmosDBMongovCoreVectorSearch-AzureOpenAI.ipynb",
    "tags":[
      "python",
      "jupyternotebook",
      "gpt35",
      "embedding-ada",
      "openai",
      "langchain",
      "vectorcosmosmongo",
      "microsoft"
    ]
  },
  {
    "title": "Cosmos AI Graph (Graph RAG)",
    "description": "CosmosAIGraph: An AI-Powered Graph and Knowledge Graph Solution with Azure Cosmos DB. Combine the power of baseline (vetor search) with the contextual and relationship data captured in a knowledge graph to bring you RAG apps to the next level with Azure Cosmos DB.",
    "preview": "coming soon",
    "website": "https://github.com/cjoakim",
    "author":"Chris Joakim",
    "source": "https://github.com/cjoakim/CosmosAIGraph",
    "tags":[
      "python",
      "gpt4",
      "embedding-ada",
      "openai",
      "aca",
      "aks",
      "vectorcosmosmongo",
      "vectorcosmosnosql",
      "microsoft"
    ]
  },
  {
    "title": "What is the database behind ChatGPT?",
    "description": "Take advantage of Azure Cosmos DB for your AI-driven applications. Seamlessly integrate with large language models like ChatGPT, for real-time operational efficiency and limitless scalability. With its built-in vector search engine and multi-model support, Azure Cosmos DB for MongoDB vCore optimizes for just-in-time data retrieval, so you can build cutting-edge solutions at any scale. ",
    "preview": "coming soon",
    "website": "https://github.com/Azure-Samples",
    "author":"Azure Content Team",
    "source": "https://www.youtube.com/watch?v=6IIUtEFKJec",
    "tags":[
      "videos",
      "microsoft"
    ]
  },

  {
    "title": "AI Semantic Search for Your Website with Azure Cosmos DB | E-commerce",
    "description": "Build low-latency recommendation engines with Azure Cosmos DB and Azure OpenAI Service. Elevate user experience with vector-based semantic search, going beyond traditional keyword limitations to deliver personalized recommendations in real-time. With pre-trained models stored in Azure Cosmos DB, tailor product predictions based on user interactions and preferences. Explore the power of augmented vector search for optimized results prioritized by relevance. ",
    "preview": "coming soon",
    "website": "https://github.com/Azure-Samples",
    "author":"Azure Content Team",
    "source": "https://www.youtube.com/watch?v=3T0K61VbnFw",
    "tags":[
      "videos",
      "microsoft"
    ]
  },
  {
    "title": "Scalable RAG with Azure Cosmos DB and DiskANN | Studio15",
    "description": "Build low-latency recommendation engines with Azure Cosmos DB and Azure OpenAI Service. Elevate user experience with vector-based semantic search, going beyond traditional keyword limitations to deliver personalized recommendations in real-time. With pre-trained models stored in Azure Cosmos DB, tailor product predictions based on user interactions and preferences. Explore the power of augmented vector search for optimized results prioritized by relevance. ",
    "preview": "coming soon",
    "website": "https://github.com/Azure-Samples",
    "author":"Azure Content Team",
    "source": "https://www.youtube.com/watch?v=3T0K61VbnFw",
    "tags":[
      "videos",
      "microsoft"
    ]
  },
  {
    "title": "Vector Search using 95% Less Compute | DiskANN with Azure Cosmos DB",
    "description": "Ensure high-accuracy, efficient vector search at massive scale with Azure Cosmos DB. Leveraging Microsoft’s DiskANN, more IO traffic moves to disk to maximize storage capacity and enable high-speed similarity searches across all data, reducing memory dependency. This technology, powering global services like Microsoft 365, is now integrated into Azure Cosmos DB, enabling developers to build scalable, high-performance applications with built-in vector search, real-time fraud detection, and robust multi-tenancy support. ",
    "preview": "coming soon",
    "website": "https://github.com/Azure-Samples",
    "author":"Azure Content Team",
    "source": "https://www.youtube.com/watch?v=MlMPIYONvfQ",
    "tags":[
      "videos",
      "microsoft"
    ]
  },
  {
    "title": "Introducing vector database capabilities in Azure Cosmos DB for NoSQL (Public Preview)",
    "description": "We are excited to announce that native vector indexing and search in Azure Cosmos DB for NoSQL is now available in preview!",
    "preview": "coming soon",
    "website": "https://github.com/Azure-Samples",
    "author":"Azure Content Team",
    "source": "https://devblogs.microsoft.com/cosmosdb/introducing-vector-database-capabilities-in-azure-cosmos-db-for-nosql/",
    "tags":[
      "blogs",
      "microsoft"
    ]
  }
  
]
